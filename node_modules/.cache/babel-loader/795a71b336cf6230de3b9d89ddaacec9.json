{"ast":null,"code":"import _classCallCheck from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mehrshadmatin/Desktop/github/src/components/Popular.js\";\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar api = require('../utils/api');\n\nfunction SelectedLanguage(props) {\n  var languages = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python'];\n  return React.createElement(\"ul\", {\n    className: \"languages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, languages.map(function (lang) {\n    return React.createElement(\"li\", {\n      style: lang === props.selectedLanguage ? {\n        color: '#d0021b'\n      } : null,\n      onClick: props.onSelect.bind(null, lang),\n      key: lang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, lang);\n  }, this));\n}\n\nfunction RepoGrid(props) {\n  return React.createElement(\"ul\", {\n    className: \"popular-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.repos.map(function (repo, index) {\n    React.createElement(\"li\", {\n      key: repo.name,\n      className: \"popular-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popular-rank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" #\", index + 1), React.createElement(\"ul\", {\n      className: \"space-list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar\",\n      src: repo.owner.avatar_url,\n      alt: 'Avatar for' + repo.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))));\n  }));\n}\n\nSelectedLanguage.propTypes = {\n  selectedLanguage: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nvar Popular =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popular, _React$Component);\n\n  function Popular(props) {\n    var _this;\n\n    _classCallCheck(this, Popular);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popular).call(this));\n    _this.state = {\n      selectedLanguage: 'All',\n      repos: null\n    };\n    _this.updateLanguage = _this.updateLanguage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Popular, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateLanguage(this.state.selectedLanguage);\n    }\n  }, {\n    key: \"updateLanguage\",\n    value: function updateLanguage(lang) {\n      this.setState(function () {\n        return {\n          selectedLanguage: lang,\n          repos: null\n        };\n      });\n      api.fetchPopularRepos(lang).then(function (repos) {\n        this.setState(function () {\n          return {\n            repos: repos\n          };\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(SelectedLanguage, {\n        selectedLanguage: this.state.selectedLanguage,\n        onSelect: this.updateLanguage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(RepoGrid, {\n        repos: this.state.repos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Popular;\n}(React.Component);\n\nexport default Popular;","map":{"version":3,"sources":["/Users/mehrshadmatin/Desktop/github/src/components/Popular.js"],"names":["React","require","PropTypes","api","SelectedLanguage","props","languages","map","lang","selectedLanguage","color","onSelect","bind","RepoGrid","repos","repo","index","name","owner","avatar_url","login","propTypes","string","isRequired","func","Popular","state","updateLanguage","setState","fetchPopularRepos","then","Component"],"mappings":"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","sourcesContent":["var React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar api = require('../utils/api');\n\nfunction SelectedLanguage(props){\n        var languages = ['All','JavaScript','Ruby','Java','CSS', 'Python'];\n        return (\n        <ul className='languages'>\n        {languages.map(function(lang){\n            return (\n                <li  \n                style = {lang === props.selectedLanguage ? {color : '#d0021b'}: null}\n                onClick = {props.onSelect.bind(null,lang)}\n                key = {lang}>\n                {lang}\n                </li>\n            )\n        },this)}\n    </ul>\n        )\n    }\n\n    function RepoGrid(props){\n\n\n\n        return (\n\n            <ul className = 'popular-list'>\n            \n            {props.repos.map(function(repo,index){\n\n                    <li key={repo.name} className='popular-item'>\n                \n\n\n                        <div className=\"popular-rank\"> #{index +1}</div>\n\n\n\n                        <ul className = 'space-list-items'>\n                        \n                        <li>\n\n                            <img \n                                className = 'avatar'\n                                src = {repo.owner.avatar_url}\n                                alt = {'Avatar for' + repo.owner.login} />\n\n\n\n                        </li>\n                        \n                        \n                        \n                        \n                        </ul>\n                    </li>\n            })}            \n            </ul>\n\n        )\n    }\n\n\n\n\nSelectedLanguage.propTypes={\n\n    selectedLanguage: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired,\n}\n\n\n\n\n\n\n\n\n\nclass Popular extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n                selectedLanguage: 'All',\n                repos: null\n        };\n        this.updateLanguage = this.updateLanguage.bind(this);\n    }\n\n\n\ncomponentDidMount(){\n    \n    this.updateLanguage(this.state.selectedLanguage);\n          \n    }\n\n    updateLanguage(lang){\n        this.setState(function(){\n            return{\n                selectedLanguage: lang,\n                repos: null\n            }\n        });\n\n\n        api.fetchPopularRepos(lang)\n            .then(function(repos){\n\n\n                this.setState(function(){\n\n\n\n\n                    return {\n                        repos: repos\n                    }\n                })\n\n            }.bind(this));\n    }\n    render(){\n            return (\n                <div>\n                    <SelectedLanguage \n                        selectedLanguage = {this.state.selectedLanguage} onSelect={this.updateLanguage} />\n\n\n                        <RepoGrid repos = {this.state.repos} />\n                </div>\n            )\n    }\n}\nexport default Popular;\n\n"]},"metadata":{},"sourceType":"module"}