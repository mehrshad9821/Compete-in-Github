{"ast":null,"code":"import _classCallCheck from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mehrshadmatin/Desktop/github/src/components/Battle.js\";\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar PlayerInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayerInput, _React$Component);\n\n  function PlayerInput(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayerInput).call(this, props));\n    _this.state = {\n      username: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    his.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PlayerInput, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n      this.setState(function () {\n        return {\n          username: value\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.props.onSubmit(this.props.id, this.state.username);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"column\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"header\",\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.label), React.createElement(\"input\", {\n        id: \"username\",\n        placeholder: \"github username\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: !this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"submit\"));\n    }\n  }]);\n\n  return PlayerInput;\n}(React.Component);\n\nPlayerInput.protoTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar Battle =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Battle, _React$Component2);\n\n  function Battle(props) {\n    var _this2;\n\n    _classCallCheck(this, Battle);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Battle).call(this, props));\n    _this2.state = {\n      playerOneName: '',\n      playerTwoName: '',\n      playerOneImage: null,\n      playerTwoImage: null\n    };\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Battle, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(id, username) {\n      this.setState(function () {\n        var newState = {};\n        newState[id + 'Name'] = username;\n        newState[id + 'Image'] = 'https://github.com/' + username + '.png?size=200';\n        return newState;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playerOneName = this.state.playerOneName;\n      var playerTwoName = this.state.playerTwoName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, !playerOneName && React.createElement(PlayerInput, {\n        id: \"playerone\",\n        label: \"Player One\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), !playerTwoName && React.createElement(PlayerInput, {\n        id: \"playerone\",\n        label: \"Player Tne\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Battle;\n}(React.Component);\n\nexport default Battle;","map":{"version":3,"sources":["/Users/mehrshadmatin/Desktop/github/src/components/Battle.js"],"names":["React","require","PropTypes","PlayerInput","props","state","username","handleChange","bind","his","handleSubmit","event","value","target","setState","preventDefault","onSubmit","id","label","Component","protoTypes","string","isRequired","func","Battle","playerOneName","playerTwoName","playerOneImage","playerTwoImage","newState"],"mappings":"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","sourcesContent":["var React = require('react');\n\nvar PropTypes = require('prop-types');\n\n\n\n\nclass PlayerInput extends React.Component{\n\n    constructor(props){\n\n\n\n        super(props);\n        this.state = {\n\n            username: ''\n        }\n\n\n        this.handleChange = this.handleChange.bind(this);\n        his.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n\n\n\n\n\n        var value = event.target.value;\n\n\n        this.setState(function(){\n\n\n\n            return {\n\n                username: value\n            }\n        })\n    }\n\n\n\n    handleSubmit(event){\n\n\n        event.preventDefault();\n        this.props.onSubmit(\n            this.props.id,\n            this.state.username\n        )\n    }\n    render(){\n\n\n        return (\n\n                <form className = 'column' onSubmit= {this.handleSubmit}>\n                \n                    <label className = 'header' htmlFor = 'username'>\n\n                        {this.props.label}\n                    \n                    </label>\n                <input \n                    id ='username'\n                    placeholder = 'github username'\n                    type = 'text'\n                    autoComplete = 'off'\n                    value = {this.state.username}\n\n                    onChange = {this.handleChange}\n\n                    />\n\n                    <button \n                        className = 'button'\n                        type = 'submit'\n                        disabled = {!this.state.username}>\n\n                        submit</button>\n\n                </form>\n        )\n    }\n}\n\nPlayerInput.protoTypes = {\n\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\n\nclass Battle extends React.Component{\n\n\n    constructor(props){\n\n\n\n\n        super(props);\n        this.state = {\n\n            playerOneName: '',\n            playerTwoName: '',\n            playerOneImage: null,\n            playerTwoImage: null\n        }\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(id,username){\n\n        this.setState(function(){\n\n            var newState = {};\n            newState[id+'Name'] = username;\n            newState[id+'Image'] = 'https://github.com/' + username + '.png?size=200';\n\n            return newState;\n\n\n        });\n    }\n    render()\n    {\n\n        var playerOneName = this.state.playerOneName;\n        var playerTwoName = this.state.playerTwoName;\n        return (\n            <div>\n                <div className=\"row\">\n\n                {!playerOneName && <PlayerInput id = 'playerone' label='Player One'  onSubmit={this.handleSubmit}/>}\n                    \n                \n                {!playerTwoName && <PlayerInput id = 'playerone' label='Player Tne'  onSubmit={this.handleSubmit}/>}\n\n\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Battle;"]},"metadata":{},"sourceType":"module"}