{"ast":null,"code":"var axios = require('axios');\n\nvar id = \"YOUR_CLIENT_ID\";\nvar sec = \"YOUR_SECRET_ID\";\nvar params = \"?client_id=\" + id + \"&client_secret=\" + sec;\n\nfunction getProfile(username) {\n  return axios.get('https://api.github.com/users/' + username + params).then(function (user) {\n    return user.data;\n  });\n}\n\nfunction getRepos(username) {\n  return axios.get('https://api.github.com/users/' + username + '/repos' + params + '&per_page=100');\n}\n\nfunction getStarCount(repos) {\n  return repos.data.reduce(function (count, repo) {\n    return count + repo, stargazers_count;\n  }, 0);\n}\n\nfunction calculateScore(profile, repos) {\n  var followers = profile.followers;\n  var totalStars = getStarCount(repos);\n  return followers * 3 + totalStars;\n}\n\nfunction handleError(error) {\n  console.warn(error);\n  return null;\n}\n\nfunction getUserData(player) {\n  return axios.all([getProfile(player), getRepos(player)]).then(function (data) {\n    var profile = data[0];\n    var repos = data[1];\n    return {\n      profile: profile,\n      score: calculateScore(profile, repos)\n    };\n  });\n}\n\nfunction sortPlayers(players) {\n  return players.sort(function (a, b) {\n    return b.score - a.score;\n  });\n}\n\nmodule.exports = {\n  battle: function battle(players) {\n    return axios.all(players.map(getUserData)).then(sortPlayers).catch(handleError);\n  },\n  fetchPopularRepos: function fetchPopularRepos(language) {\n    var encodedURI = window.encodeURI('https://api.github.com/search/repositories?q=stars:>1+language: ' + language + '&sort=stars&order=desc&type=Repositories');\n    return axios.get(encodedURI).then(function (response) {\n      return response.data.items;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mehrshadmatin/Desktop/github/src/utils/api.js"],"names":["axios","require","id","sec","params","getProfile","username","get","then","user","data","getRepos","getStarCount","repos","reduce","count","repo","stargazers_count","calculateScore","profile","followers","totalStars","handleError","error","console","warn","getUserData","player","all","score","sortPlayers","players","sort","a","b","module","exports","battle","map","catch","fetchPopularRepos","language","encodedURI","window","encodeURI","response","items"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAGA,IAAIC,EAAE,GAAG,gBAAT;AACA,IAAIC,GAAG,GAAG,gBAAV;AACA,IAAIC,MAAM,GAAG,gBAAgBF,EAAhB,GAAqB,iBAArB,GAAyCC,GAAtD;;AAIA,SAASE,UAAT,CAAoBC,QAApB,EAA6B;AAKzB,SAAON,KAAK,CAACO,GAAN,CAAU,kCAAiCD,QAAjC,GAA4CF,MAAtD,EAEFI,IAFE,CAEG,UAASC,IAAT,EAAc;AAGZ,WAAOA,IAAI,CAACC,IAAZ;AAGP,GARE,CAAP;AASH;;AAGD,SAASC,QAAT,CAAkBL,QAAlB,EAA2B;AAGvB,SAAON,KAAK,CAACO,GAAN,CAAU,kCAAiCD,QAAjC,GAA2C,QAA3C,GAAqDF,MAArD,GAA4D,eAAtE,CAAP;AAGH;;AAKD,SAASQ,YAAT,CAAsBC,KAAtB,EAA4B;AAGxB,SAAOA,KAAK,CAACH,IAAN,CAAWI,MAAX,CAAkB,UAAUC,KAAV,EAAgBC,IAAhB,EAAqB;AAGtC,WAAOD,KAAK,GAAGC,IAAR,EAAaC,gBAApB;AAIP,GAPM,EAOJ,CAPI,CAAP;AAQH;;AAKD,SAASC,cAAT,CAAwBC,OAAxB,EAAgCN,KAAhC,EAAsC;AAKlC,MAAIO,SAAS,GAAGD,OAAO,CAACC,SAAxB;AACA,MAAIC,UAAU,GAAGT,YAAY,CAACC,KAAD,CAA7B;AAEA,SAAQO,SAAS,GAAC,CAAX,GAAcC,UAArB;AACH;;AAID,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAGvBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,SAAO,IAAP;AACH;;AAKD,SAASG,WAAT,CAAqBC,MAArB,EAA4B;AAKxB,SAAO3B,KAAK,CAAC4B,GAAN,CAAU,CAEbvB,UAAU,CAACsB,MAAD,CAFG,EAGbhB,QAAQ,CAACgB,MAAD,CAHK,CAAV,EAIJnB,IAJI,CAIC,UAASE,IAAT,EAAc;AAElB,QAAIS,OAAO,GAAGT,IAAI,CAAC,CAAD,CAAlB;AACA,QAAIG,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAhB;AAKA,WAAO;AAEHS,MAAAA,OAAO,EAAEA,OAFN;AAGHU,MAAAA,KAAK,EAAEX,cAAc,CAACC,OAAD,EAASN,KAAT;AAHlB,KAAP;AAKH,GAjBM,CAAP;AAkBH;;AAID,SAASiB,WAAT,CAAqBC,OAArB,EAA6B;AAKzB,SAAOA,OAAO,CAACC,IAAR,CAAa,UAASC,CAAT,EAAWC,CAAX,EAAa;AAI7B,WAAOA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAAnB;AACH,GALM,CAAP;AAMH;;AAIDM,MAAM,CAACC,OAAP,GAAiB;AAGbC,EAAAA,MAAM,EAAE,gBAASN,OAAT,EAAiB;AAErB,WAAO/B,KAAK,CAAC4B,GAAN,CAAUG,OAAO,CAACO,GAAR,CAAYZ,WAAZ,CAAV,EACFlB,IADE,CACGsB,WADH,EAEFS,KAFE,CAEIjB,WAFJ,CAAP;AAMH,GAXY;AAebkB,EAAAA,iBAAiB,EAAG,2BAASC,QAAT,EAAkB;AAKlC,QAAIC,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiB,qEAAmEH,QAAnE,GAA6E,0CAA9F,CAAjB;AAIA,WAAOzC,KAAK,CAACO,GAAN,CAAUmC,UAAV,EACFlC,IADE,CACG,UAASqC,QAAT,EAAkB;AAEpB,aAAOA,QAAQ,CAACnC,IAAT,CAAcoC,KAArB;AAIH,KAPE,CAAP;AAQH;AAhCY,CAAjB","sourcesContent":["var axios = require('axios');\n\n\nvar id = \"YOUR_CLIENT_ID\";\nvar sec = \"YOUR_SECRET_ID\";\nvar params = \"?client_id=\" + id + \"&client_secret=\" + sec;\n\n\n\nfunction getProfile(username){\n\n\n\n\n    return axios.get('https://api.github.com/users/'+ username + params)\n\n        .then(function(user){\n\n\n                return user.data;\n\n\n        });\n}\n\n\nfunction getRepos(username){\n\n\n    return axios.get('https://api.github.com/users/'+ username +'/repos'+ params+'&per_page=100')\n\n\n}\n\n\n\n\nfunction getStarCount(repos){\n\n\n    return repos.data.reduce(function (count,repo){\n\n\n            return count + repo,stargazers_count;\n\n\n\n    }, 0);\n}\n\n\n\n\nfunction calculateScore(profile,repos){\n\n\n\n\n    var followers = profile.followers;\n    var totalStars = getStarCount(repos);\n\n    return (followers*3)+totalStars;\n}\n\n\n\nfunction handleError(error){\n\n\n    console.warn(error);\n    return null;\n}\n\n\n\n\nfunction getUserData(player){\n\n\n\n\n    return axios.all([\n\n        getProfile(player),\n        getRepos(player)\n    ]).then(function(data){\n\n        var profile = data[0];\n        var repos = data[1];\n\n\n\n\n        return {\n\n            profile: profile,\n            score: calculateScore(profile,repos)\n        }\n    })\n}\n\n\n\nfunction sortPlayers(players){\n\n\n\n\n    return players.sort(function(a,b){\n\n\n\n        return b.score - a.score;\n    });\n}\n\n \n\nmodule.exports = {\n\n\n    battle: function(players){\n\n        return axios.all(players.map(getUserData))\n            .then(sortPlayers)\n            .catch(handleError)\n\n\n\n    },\n\n\n\n    fetchPopularRepos : function(language){\n\n\n\n\n        var encodedURI = window.encodeURI('https://api.github.com/search/repositories?q=stars:>1+language: '+language +'&sort=stars&order=desc&type=Repositories');\n\n\n\n        return axios.get(encodedURI)\n            .then(function(response){\n\n                return response.data.items;\n\n\n\n            });\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}