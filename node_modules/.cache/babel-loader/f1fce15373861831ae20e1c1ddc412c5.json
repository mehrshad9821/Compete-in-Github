{"ast":null,"code":"import _classCallCheck from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mehrshadmatin/Desktop/github/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mehrshadmatin/Desktop/github/src/components/Battle.js\";\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar Link = require('react-router-dom').Link;\n\nfunction PlayerPreview(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar\",\n    src: props.avatar,\n    alt: 'Avatar for ' + props.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"username>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"@\", props.username)), React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: props.onReset.bind(null, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nPlayerPreview.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};\n\nvar PlayerInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayerInput, _React$Component);\n\n  function PlayerInput(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayerInput).call(this, props));\n    _this.state = {\n      username: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PlayerInput, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n      this.setState(function () {\n        return {\n          username: value\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.props.onSubmit(this.props.id, this.state.username);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"column\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"header\",\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.label), React.createElement(\"input\", {\n        id: \"username\",\n        placeholder: \"github username\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        disabled: !this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"submit\"));\n    }\n  }]);\n\n  return PlayerInput;\n}(React.Component);\n\nPlayerInput.protoTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar Battle =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Battle, _React$Component2);\n\n  function Battle(props) {\n    var _this2;\n\n    _classCallCheck(this, Battle);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Battle).call(this, props));\n    _this2.state = {\n      playerOneName: '',\n      playerTwoName: '',\n      playerOneImage: null,\n      playerTwoImage: null\n    };\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleReset = _this2.handleReset.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Battle, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(id, username) {\n      this.setState(function () {\n        var newState = {};\n        newState[id + 'Name'] = username;\n        newState[id + 'Image'] = 'https://github.com/' + username + '.png?size=200';\n        return newState;\n      });\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset(id) {\n      this.setState(function () {\n        var newState = {};\n        newState[id + 'Name'] = '';\n        newState[id + 'Image'] = null;\n        return newState;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      var playerOneName = this.state.playerOneName;\n      var playerTwoName = this.state.playerTwoName;\n      var playerOneImage = this.state.playerOneImage;\n      var playerTwoImage = this.state.playerTwoImage;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, !playerOneName && React.createElement(PlayerInput, {\n        id: \"playerOne\",\n        label: \"Player One\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), playerOneImage !== null && React.createElement(PlayerPreview, {\n        avatar: playerOneImage,\n        username: playerOneName,\n        onReset: this.handleReset,\n        id: \"playerOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), !playerTwoName && React.createElement(PlayerInput, {\n        id: \"playerTwo\",\n        label: \"Player Two\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), playerTwoImage !== null && React.createElement(PlayerPreview, {\n        avatar: playerTwoImage,\n        username: playerTwoName,\n        onReset: this.handleReset,\n        id: \"playerTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), playerOneImage && playerTwoImage && React.createElement(Link, {\n        className: \"button\",\n        to: {\n          pathname: match.url + '/results',\n          search: '?playerOneName=' + playerOneName + '&playerTwoName=' + playerTwoName\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Battle\"));\n    }\n  }]);\n\n  return Battle;\n}(React.Component);\n\nexport default Battle;","map":{"version":3,"sources":["/Users/mehrshadmatin/Desktop/github/src/components/Battle.js"],"names":["React","require","PropTypes","Link","PlayerPreview","props","avatar","username","onReset","bind","id","propTypes","string","isRequired","func","PlayerInput","state","handleChange","handleSubmit","event","value","target","setState","preventDefault","onSubmit","label","Component","protoTypes","Battle","playerOneName","playerTwoName","playerOneImage","playerTwoImage","handleReset","newState","match","pathname","url","search"],"mappings":"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","sourcesContent":["var React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar Link = require('react-router-dom').Link;\n\n\nfunction PlayerPreview(props){\n\n\n\n    return(\n\n            <div>\n\n                <div className = 'column'>\n                \n                    <img className = 'avatar' src = {props.avatar} alt = {'Avatar for '+ props.username} \n                    />\n                \n                <h2 className = 'username>'>@{props.username}</h2>\n\n                </div>\n\n                <button className = 'reset' onClick = {props.onReset.bind(null,props.id)}>\n                \n\n                        Reset\n                \n                \n                </button>\n\n\n            </div>\n\n\n\n    )\n}\n\n\nPlayerPreview.propTypes = {\n\n\n\n\n        avatar: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        onReset: PropTypes.func.isRequired\n}\n\n\n\n\n\nclass PlayerInput extends React.Component{\n\n    constructor(props){\n\n\n\n        super(props);\n        this.state = {\n\n            username: ''\n        }\n\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n\n        var value = event.target.value;\n\n\n        this.setState(function(){\n\n\n\n            return {\n\n                username: value\n            }\n        })\n    }\n\n\n\n    handleSubmit(event){\n\n\n        event.preventDefault();\n        this.props.onSubmit(\n            this.props.id,\n            this.state.username\n        )\n    }\n    render(){\n\n\n        return (\n\n                <form className = 'column' onSubmit= {this.handleSubmit}>\n                \n                    <label className = 'header' htmlFor = 'username'>\n\n                        {this.props.label}\n                    \n                    </label>\n                <input \n                    id ='username'\n                    placeholder = 'github username'\n                    type = 'text'\n                    autoComplete = 'off'\n                    value = {this.state.username}\n\n                    onChange = {this.handleChange}\n\n                    />\n\n                    <button \n                        className = 'button'\n                        type = 'submit'\n                        disabled = {!this.state.username}>\n\n                        submit</button>\n\n                </form>\n        )\n    }\n}\n\nPlayerInput.protoTypes = {\n\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\n\nclass Battle extends React.Component{\n\n\n    constructor(props){\n\n\n\n\n        super(props);\n        this.state = {\n\n            playerOneName: '',\n            playerTwoName: '',\n            playerOneImage: null,\n            playerTwoImage: null\n        }\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n\n    handleSubmit(id,username){\n\n        this.setState(function(){\n\n            var newState = {};\n            newState[id+'Name'] = username;\n            newState[id+'Image'] = 'https://github.com/' + username + '.png?size=200';\n\n            return newState;\n\n\n        });\n    }\n\n\n\n    handleReset(id){\n\n\n\n\n\n\n        this.setState(function(){\n\n\n\n\n\n            var newState = {};\n            newState[id+'Name']='';\n            newState[id+'Image']= null;\n            return newState;\n        });\n    }\n    render()\n    {\n        \n        var match = this.props.match;\n        var playerOneName = this.state.playerOneName;\n        var playerTwoName = this.state.playerTwoName;\n        var playerOneImage = this.state.playerOneImage;\n        var playerTwoImage = this.state.playerTwoImage;\n        return (\n            <div>\n                <div className=\"row\">\n\n                {!playerOneName && <PlayerInput id = 'playerOne' label='Player One'  onSubmit={this.handleSubmit}/>}\n                    \n\n                    {playerOneImage !== null && <PlayerPreview avatar={playerOneImage} username = {playerOneName} onReset = {this.handleReset} id='playerOne'/>}\n\n\n                {!playerTwoName && <PlayerInput id = 'playerTwo' label='Player Two'  onSubmit={this.handleSubmit}/>}\n\n                {playerTwoImage !== null && <PlayerPreview avatar={playerTwoImage} username = {playerTwoName} onReset = {this.handleReset} id='playerTwo'/>}\n\n\n\n                </div>\n\n\n                {playerOneImage && playerTwoImage && <Link className='button' to ={{pathname: match.url + '/results', search:'?playerOneName=' + playerOneName + '&playerTwoName=' + playerTwoName}}>Battle</Link>}\n            </div>\n        )\n    }\n}\n\nexport default Battle;"]},"metadata":{},"sourceType":"module"}